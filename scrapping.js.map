{"version":3,"file":"scrapping.js","sourceRoot":"","sources":["scrapping.ts"],"names":[],"mappings":";;AAAA,iCAA0B;AAC1B,qCAA8B;AAW9B,CAAC;AACD,MAAM,aAAa,GAAG,eAAK,CAAC,MAAM,EAAE,CAAC,CAAC,8BAA8B;AAEpE,IAAI,IAAI,GAAU,EAAE,CAAC;AAGrB,SAAS,WAAW,CAAC,UAAiB,EAAE,GAAO;IAC7C,MAAM,OAAO,GACb,CAAC,wDAAwD;QACzD,0DAA0D;QAC1D,0DAA0D;QAC1D,wDAAwD;KACvD,CAAC;IACF,OAAO,CAAC,OAAO,CAAC,UAAS,GAAG;QAE1B,4CAA4C;QAC5C,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC;aACnB,IAAI,CAAE,iCAAiC;QACtC,AADK,iCAAiC;QACtC,QAAQ,CAAC,EAAE;YACP,IAAI,QAAQ,GAAwB,EAAE,CAAC;YACvC,IAAI,GAAC,EAAE,CAAC;YACV,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,qCAAqC;YACjE,qBAAqB;YACrB,MAAM,CAAC,GAAG,iBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,oCAAoC;YAClE,MAAM,GAAG,GAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,gGAAgG;YAGlI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAQ,EAAE,IAAQ,EAAE,EAAE;gBAC9B,IAAI,IAAI,GAAgB,EAAC,IAAI,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC;gBAC3D,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAA;gBACvC,IAAI,CAAC,IAAI,GAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG;gBACjE,IAAI,CAAC,GAAG,GAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;gBACvF,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,EAAC;oBAC1D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB;YAEL,CAAC,CAEF,CAAA;YACD,IAAG,QAAQ,CAAC,MAAM,GAAC,CAAC,EAAC;gBACnB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;aACtD;iBACG;gBACF,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAA;aAClE;QAEC,CAAC,CAAC,CAAC;IACP,CAAC,CACF,CAAC;AACJ,CAAC;AAED,SAAS,wBAAwB,CAAC,QAA6B;IAC7D,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAmB,EAAC,YAA0B,EAAC,EAAE,CAAA,GAAG,YAAY,MAAM,YAAY,CAAC,IAAI,IAAI,YAAY,CAAC,IAAI,IAAI,YAAY,CAAC,GAAG,EAAE,EAAC,EAAE,CAAC,CAAC;AACjK,CAAC;AAED,yBAAyB;AAEzB,6CAA6C","sourcesContent":["import axios from 'axios';\nimport cheerio from 'cheerio';\n\ninterface ServicePrice {\n    val: number; \n    name: string;\n    type: string;\n    time:string;\n  }\n\n\n\n; \nconst AxiosInstance = axios.create(); // Create a new Axios Instance\n\nlet resp : string=\"\";\n\n\nfunction getPriceRay(filterText:string, msg:any){\n  const urlList: Array<string> = \n  ['https://rayunlocker.com/index.php/resellerpricing/imei',\n  'https://rayunlocker.com/index.php/resellerpricing/server',\n  'https://rayunlocker.com/index.php/resellerpricing/remote',\n  'https://rayunlocker.com/index.php/resellerpricing/file'\n  ];\n  urlList.forEach(function(url){\n\n    // Send an async HTTP Get request to the url\n    AxiosInstance.get(url)\n      .then( // Once we have data returned ...\n        response => {\n            let services: Array<ServicePrice> = [];\n            resp=\"\";\n          const html = response.data; // Get the HTML from the HTTP request\n          // console.log(html);\n          const $ = cheerio.load(html); // Load the HTML string into cheerio\n          const row: any = $('tr.service'); // Parse the HTML and extract just whatever code contains .statsTableContainer and has tr inside\n            \n            \n          row.each((i:number, elem:any) => {\n            let serv: ServicePrice ={name:\"\",val:0,type:\"ray\",time:\"\"};\n            serv.name = $(elem).find('td>a').text()\n            serv.time= $(elem).find('td.text-center>span').text().trim(); // \n            serv.val =  +$(elem).find('td.text-right>span.nowrap').text().replace(\"USD\",\"\").trim();\n            if(serv.name.toLowerCase().includes(filterText.toLowerCase())){\n                services.push(serv);\n            }\n            \n        }\n        \n      )\n      if(services.length>0){\n        msg.channel.send(servicePriceListToString(services));\n      }\n      else{\n        msg.channel.send(`No se encontraron servicios con ese nombre :(`)\n      }\n      \n        });\n    }\n  );\n}\n\nfunction servicePriceListToString(services: Array<ServicePrice>): string{\n  return services.reduce((previusValue:string,currentValue: ServicePrice)=>`${previusValue}\\n ${currentValue.name} ${currentValue.time} ${currentValue.val}`,\"\");\n}\n\n// getPriceRay('device');\n\n//   .catch(console.error); // Error handling\n"]}